###
#  summary: get user infomation
#  tags:
#    - Registration
#  security:
#    - Bearer: []
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/models.entities.User'
###
GET         /user                        controllers.api.v1.Users.user

###
#  summary: create user
#  tags:
#    - Registration
#  parameters:
#    - name: body
#      schema: 
#        $ref: '#/definitions/forms.SignUpForm.Data'
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/models.entities.User'
###
POST        /user_register               controllers.api.v1.UserRegisterController.submit

###
#  summary: user login
#  tags:
#    - Registration
#  parameters:
#    - name: body
#      schema: 
#        $ref: '#/definitions/forms.SignInForm.Data'
#  responses:
#    200:
#      description: success
#      schema:
#        $ref: '#/definitions/models.entities.User'
###
POST        /login                       controllers.api.v1.UserLoginController.submit

POST        /logout                      controllers.api.v1.UserLogoutController.submit
GET         /client_info                 controllers.api.v1.AuthorizationController.clientInfo(client_id: String, redirect_uri: String, response_type: String, state: Option[String])
POST        /authorize                   controllers.api.v1.AuthorizationController.authorize
